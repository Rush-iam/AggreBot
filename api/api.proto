syntax = "proto3";
package api;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

option go_package = "./api";

service NewsfeedConfigurator {
  rpc addUser(UserId) returns (UserId) {
    option (google.api.http) = {
      post: "/user/{id}"
    };
  };
  rpc updateUser(User) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      patch: "/user/{id}/active/{active}"
    };
  };
  rpc deleteUser(UserId) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/user/{id}"
    };
  };

  rpc addSource(AddSourceRequest) returns (SourceId);
  rpc listUserSources(UserId) returns (ListUserSourcesResponse);
  rpc updateSource(UpdateSourceRequest) returns (google.protobuf.Empty);
  rpc deleteSource(SourceId) returns (google.protobuf.Empty);
}

message User {
  int64 id = 1;
  string filter = 2;
  bool active = 3;
}

message Source {
  int64 id = 1;
  int64 user_id = 2;
  bool active = 3;
  string name = 4;
  string type = 5;
  optional string ref_str = 6;
  optional int64 ref_int = 7;
  int64 last_checked = 8;
  int64 retry_count = 9;
}

message UserId {
  int64 id = 1;
}

message SourceId {
  int64 id = 1;
}

message ListUserSourcesResponse {
  repeated Source sources = 1;
}

message AddSourceRequest {
  int64 user_id = 1;
  string name = 2;
  string type = 3;
  optional string ref_str = 4;
  optional int64 ref_int = 5;
}

message UpdateSourceRequest {
  int64 source_id = 1;
  string name = 2;
  bool active = 3;
}
