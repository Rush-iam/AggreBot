syntax = "proto3";
package api;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

option go_package = "./api";

service NewsfeedConfigurator {
  rpc addUser(UserId) returns (UserId) {
    option (google.api.http) = {
      post: "/user/{id}"
    };
  };
  rpc getUser(UserId) returns (User) {
    option (google.api.http) = {
      get: "/user/{id}"
    };
  };
  rpc updateUserFilter(User) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      patch: "/user/{id}/filter/{filter}"
    };
  };
  rpc deleteUser(UserId) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/user/{id}"
    };
  };

  rpc addSource(AddSourceRequest) returns (SourceId) {
    option (google.api.http) = {
      post: "/source"
      body: "*"
    };
  };
  rpc getSource(SourceId) returns (Source) {
    option (google.api.http) = {
      get: "/source/{id}"
    };
  };
  rpc getUserSources(UserId) returns (Sources) {
    option (google.api.http) = {
      get: "/user/{id}/sources"
    };
  };
  rpc updateSourceName(UpdateSourceNameRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      patch: "/source/{id}/name/{name}"
    };
  };
  rpc deleteSource(SourceId) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/source/{id}"
    };
  };
}

message User {
  int64 id = 1;
  string filter = 2;
}

message Source {
  int64 id = 1;
  int64 user_id = 2;
  string name = 3;
  string url = 4;
  bool is_active = 5;
  int64 last_checked = 6;
  int64 retry_count = 7;
}

message Sources {
  repeated Source sources = 1;
}

message UserId {
  int64 id = 1;
}

message SourceId {
  int64 id = 1;
}

message AddSourceRequest {
  int64 user_id = 1;
  string name = 2;
  string url = 3;
}

message UpdateSourceNameRequest {
  int64 id = 1;
  string name = 2;
}
