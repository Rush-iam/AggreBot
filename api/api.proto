syntax = "proto3";
package api;

import "google/api/annotations.proto";

option go_package = "./internal/pkg/api";

message User {
  int64 id = 1;
  string filter = 2;
}

message Source {
  int64 id = 1;
  int64 user_id = 2;
  string name = 3;
  string url = 4;
  bool is_active = 5;
  int32 retry_count = 6;
}

service NewsfeedConfigurator {
  rpc addUser(AddUserRequest) returns (AddUserResponse) {
    option (google.api.http) = {
      post: "/user/{id}"
    };
  };
  rpc getUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      get: "/user/{id}"
    };
  };
  rpc updateUserFilter(UpdateUserFilterRequest) returns (UpdateUserFilterResponse) {
    option (google.api.http) = {
      patch: "/user/{user.id}/filter/{user.filter}"
    };
  };
  rpc deleteUser(DeleteUserRequest) returns (DeleteUserResponse) {
    option (google.api.http) = {
      delete: "/user/{id}"
    };
  };

  rpc addSource(AddSourceRequest) returns (AddSourceResponse) {
    option (google.api.http) = {
      post: "/source"
      body: "*"
    };
  };
  rpc getSource(GetSourceRequest) returns (GetSourceResponse) {
    option (google.api.http) = {
      get: "/source/{id}"
    };
  };
  rpc getUserSources(GetUserSourcesRequest) returns (GetUserSourcesResponse) {
    option (google.api.http) = {
      get: "/user/{id}/sources"
    };
  };
  rpc updateSourceName(UpdateSourceNameRequest) returns (UpdateSourceNameResponse) {
    option (google.api.http) = {
      patch: "/source/{id}/name/{name}"
    };
  };
  rpc updateSourceIsActive(UpdateSourceIsActiveRequest) returns (UpdateSourceIsActiveResponse) {
    option (google.api.http) = {
      patch: "/source/{id}/{is_active}"
    };
  };
  rpc deleteSource(DeleteSourceRequest) returns (DeleteSourceResponse) {
    option (google.api.http) = {
      delete: "/source/{id}"
    };
  };
}

message AddUserRequest {
  int64 id = 1;
}

message AddUserResponse {
}

message GetUserRequest {
  int64 id = 1;
}

message GetUserResponse {
  User user = 1;
}

message UpdateUserFilterRequest {
  User user = 1;
}

message UpdateUserFilterResponse {
}

message DeleteUserRequest {
  int64 id = 1;
}

message DeleteUserResponse {
}


message AddSourceRequest {
  int64 user_id = 1;
  string name = 2;
  string url = 3;
}

message AddSourceResponse {
  Source source = 1;
}

message GetSourceRequest {
  int64 id = 1;
}

message GetSourceResponse {
  Source source = 1;
}

message GetUserSourcesRequest {
  int64 id = 1;
}

message GetUserSourcesResponse {
  repeated Source sources = 1;
}

message UpdateSourceNameRequest {
  int64 id = 1;
  string name = 2;
}

message UpdateSourceNameResponse {
}

message UpdateSourceIsActiveRequest {
  int64 id = 1;
  bool is_active = 2;
}

message UpdateSourceIsActiveResponse {
  Source source = 1;
}

message DeleteSourceRequest {
  int64 id = 1;
}

message DeleteSourceResponse {
}
